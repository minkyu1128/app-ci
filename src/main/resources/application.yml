# =====================================================
# Spring 설정
# =====================================================
spring:
  profiles:
    active: local
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp
  devtools:
    livereload:
      enabled: true
  pid:
    file: app-ci.pid

  # ===================================================================================================================================
  # Database 설정
  # ===================================================================================================================================
  h2:
    console:
      enabled: true
      path: /app-ci-db
  sql:
    init:
      # DB 초기화(always / never). Embeded 인메모리DB는 기본적으로 초기화를 수행한다.
      mode: always
      # Database 벤더(h2,oracle,mysql,postgresql,...)
      platform: h2
  datasource:
#    url: "jdbc:h2:tcp://localhost:19092/~/ci"
#    url: jdbc:h2:mem:xitdb?rewriteBatchedStatements=true&profileSQL=true&logger=Slf4JLogger&maxQuerySizeToLog=999999
#    url: jdbc:h2:file:C:/data${spring.h2.console.path};FILE_LOCK=NO
    url: jdbc:h2:file:./data${spring.h2.console.path};FILE_LOCK=NO
    driver-class-name: org.h2.Driver
    username: sa
    password:
  hikari:
    driver-class-name: ${spring.datasource.driver-class-name}
    jdbc-url: ${spring.datasource.url}
    username: ${spring.datasource.username}
    password: ${spring.datasource.password}
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        format_sql: true
    hibernate:
      # create / create-drop / update / validate / none
      ddl-auto: none
    open-in-view: true
    show-sql: true


# =====================================================
# Logging 설정
# =====================================================
logging:
  file:
    name: ./logs/logback.log
  logback:
    rollingpolicy:
      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
      max-history: 30
      max-file-size:
        100MB
  level:
    root: info
    '[org.hibernate.sql]': debug


# =====================================================
# NICE api 계약정보
# =====================================================
contract:
  nice:
    ci:
      type: rest
      socket:
        site-code: GI72
        site-pw: "00000000"
      rest:
        host: https://svc.niceapi.co.kr:22001
        client-id: "6c3eb1ff-530d-458a-9a6e-e02e3346f679"
        client-secret: "960f204ec45bb312b7ad2d6b54b984d9c353b8"
        api:
          generate-token: /digital/niceid/oauth/oauth/token
          revoke-token: /digital/niceid/oauth/oauth/token/revokeById
          publickey: /digital/niceid/api/v1.0/common/crypto/publickey
          symmetrickey: /digital/niceid/api/v1.0/common/crypto/symmetrickey
          ci: /digital/niceid/cert/v1.0/ipin/addinfo/ci

